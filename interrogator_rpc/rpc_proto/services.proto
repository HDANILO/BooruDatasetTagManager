
syntax = "proto3";


option csharp_namespace = "Image_Interrogator_Ns";


package interrogator;

message InterrogatorListing {
    repeated string interrogator_names = 1;
}

message NetworkInterrogationParameters {
    string interrogator_network   = 1;
    //float  interrogator_threshold = 2;
    repeated AdditionalNetworkParameter AdditionalParameters = 2;
}

message InterrogationRequest {
    repeated NetworkInterrogationParameters params                 = 1;
    bytes                                   interrogate_image      = 2;
    bool                                    skip_internet_requests = 3;
    bool                                    serialize_vram_usage   = 4;
    string                                  image_name             = 5;
}

message InterrogatorParamRequest {
    string interrogator_network = 1;
}

message InterrogatorParamResponse {
    bool Result = 1;
    string  ErrMes = 2;
    string Type = 3;
    repeated  AdditionalNetworkParameter Parameters = 4;
}


message TagEntry {
    string tag        = 1;
    float probability = 2;
}

message AdditionalNetworkParameter {
    string key        = 1;
    string value = 2;
    string type = 3;
    string comment = 4;
}

message InterrogationResponse {
    string network_name    = 1;
    repeated TagEntry tags = 2;
}



message ImageTagResults {
    repeated InterrogationResponse responses = 1;
    bool interrogate_ok                      = 2;
    string error_msg                         = 3;
}


// RPC actions CANNOT have empty requests, or empty responses.
// This.... is stupid.
message InterrogatorListingRequest {

}

service ImageInterrogator {
    rpc ListInterrogators (InterrogatorListingRequest) returns (InterrogatorListing);
    rpc InterrogateImage (InterrogationRequest) returns (ImageTagResults);
    rpc InterrogatorParameters (InterrogatorParamRequest) returns (InterrogatorParamResponse);
}